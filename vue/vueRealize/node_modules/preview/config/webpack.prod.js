/*
 * @Description: 
 * @Author: yourName
 * @Date: 2023-02-01 09:36:38
 * @LastEditors: wunihong
 * @LastEditTime: 2023-02-01 16:53:36
 */
const path = require('path')
const ESLintPlugin = require('eslint-webpack-plugin')
const HtmlWebpackPlugin = require('html-webpack-plugin')

module.exports = {
  entry: '@/index.ts',
  output: {
    path: path.resolve(__dirname, '../dist'),
    filename: 'bundle.js',
    clean: true,
    publicPath: '/'
  },
  module: {
    rules: [
      {
        oneOf: [
          {
            test: /\.js$/,
            exclude: /node_modules/,
            loader: 'babel-loader',
            options: {
              cacheDirectory: true,
              cacheCompression: false,
              plugins: ['@babel/plugin-transform-runtime']
            }
          },
          {
            test: /\.ts$/,
            exclude: /node_modules/,
            loader: 'ts-loader',
            options: {
              configFile: path.resolve(__dirname, '../tsconfig.json')
            } 
          }
        ]
      }
    ]
  },
  plugins: [
    new ESLintPlugin({
      context: path.resolve(__dirname, 'src'),
      cache: true,
      cacheLocation: path.resolve(__dirname, '../node_modules/.cache/eslint-cache')
    }),
    new HtmlWebpackPlugin({
      template: path.resolve(__dirname, '../public/index.html')
    })
  ],
  mode: 'production',
  devtool: 'source-map',
  resolve: {
    alias: {
      '@': path.resolve(__dirname, '../src')
    },
    extensions: [".ts", ".tsx", ".js"], // 配置ts文件可以作为模块加载
  }
}